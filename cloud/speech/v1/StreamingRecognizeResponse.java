// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/speech/v1/cloud_speech.proto

package com.google.cloud.speech.v1;

/**
 * <pre>
 * `StreamingRecognizeResponse` is the only message returned to the client by
 * `StreamingRecognize`. A series of zero or more `StreamingRecognizeResponse`
 * messages are streamed back to the client. If there is no recognizable
 * audio, and `single_utterance` is set to false, then no messages are streamed
 * back to the client.
 * Here's an example of a series of ten `StreamingRecognizeResponse`s that might
 * be returned while processing audio:
 * 1. results { alternatives { transcript: "tube" } stability: 0.01 }
 * 2. results { alternatives { transcript: "to be a" } stability: 0.01 }
 * 3. results { alternatives { transcript: "to be" } stability: 0.9 }
 *    results { alternatives { transcript: " or not to be" } stability: 0.01 }
 * 4. results { alternatives { transcript: "to be or not to be"
 *                             confidence: 0.92 }
 *              alternatives { transcript: "to bee or not to bee" }
 *              is_final: true }
 * 5. results { alternatives { transcript: " that's" } stability: 0.01 }
 * 6. results { alternatives { transcript: " that is" } stability: 0.9 }
 *    results { alternatives { transcript: " the question" } stability: 0.01 }
 * 7. results { alternatives { transcript: " that is the question"
 *                             confidence: 0.98 }
 *              alternatives { transcript: " that was the question" }
 *              is_final: true }
 * Notes:
 * - Only two of the above responses #4 and #7 contain final results; they are
 *   indicated by `is_final: true`. Concatenating these together generates the
 *   full transcript: "to be or not to be that is the question".
 * - The others contain interim `results`. #3 and #6 contain two interim
 *   `results`: the first portion has a high stability and is less likely to
 *   change; the second portion has a low stability and is very likely to
 *   change. A UI designer might choose to show only high stability `results`.
 * - The specific `stability` and `confidence` values shown above are only for
 *   illustrative purposes. Actual values may vary.
 * - In each response, only one of these fields will be set:
 *     `error`,
 *     `speech_event_type`, or
 *     one or more (repeated) `results`.
 * </pre>
 *
 * Protobuf type {@code google.cloud.speech.v1.StreamingRecognizeResponse}
 */
public  final class StreamingRecognizeResponse extends
    com.google.protobuf.GeneratedMessageLite<
        StreamingRecognizeResponse, StreamingRecognizeResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:google.cloud.speech.v1.StreamingRecognizeResponse)
    StreamingRecognizeResponseOrBuilder {
  private StreamingRecognizeResponse() {
    results_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Indicates the type of speech event.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType}
   */
  public enum SpeechEventType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * No speech event specified.
     * </pre>
     *
     * <code>SPEECH_EVENT_UNSPECIFIED = 0;</code>
     */
    SPEECH_EVENT_UNSPECIFIED(0),
    /**
     * <pre>
     * This event indicates that the server has detected the end of the user's
     * speech utterance and expects no additional speech. Therefore, the server
     * will not process additional audio (although it may subsequently return
     * additional results). The client should stop sending additional audio
     * data, half-close the gRPC connection, and wait for any additional results
     * until the server closes the gRPC connection. This event is only sent if
     * `single_utterance` was set to `true`, and is not used otherwise.
     * </pre>
     *
     * <code>END_OF_SINGLE_UTTERANCE = 1;</code>
     */
    END_OF_SINGLE_UTTERANCE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No speech event specified.
     * </pre>
     *
     * <code>SPEECH_EVENT_UNSPECIFIED = 0;</code>
     */
    public static final int SPEECH_EVENT_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * This event indicates that the server has detected the end of the user's
     * speech utterance and expects no additional speech. Therefore, the server
     * will not process additional audio (although it may subsequently return
     * additional results). The client should stop sending additional audio
     * data, half-close the gRPC connection, and wait for any additional results
     * until the server closes the gRPC connection. This event is only sent if
     * `single_utterance` was set to `true`, and is not used otherwise.
     * </pre>
     *
     * <code>END_OF_SINGLE_UTTERANCE = 1;</code>
     */
    public static final int END_OF_SINGLE_UTTERANCE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SpeechEventType valueOf(int value) {
      return forNumber(value);
    }

    public static SpeechEventType forNumber(int value) {
      switch (value) {
        case 0: return SPEECH_EVENT_UNSPECIFIED;
        case 1: return END_OF_SINGLE_UTTERANCE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SpeechEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SpeechEventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SpeechEventType>() {
            public SpeechEventType findValueByNumber(int number) {
              return SpeechEventType.forNumber(number);
            }
          };

    private final int value;

    private SpeechEventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType)
  }

  private int bitField0_;
  public static final int ERROR_FIELD_NUMBER = 1;
  private com.google.rpc.Status error_;
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>optional .google.rpc.Status error = 1;</code>
   */
  public boolean hasError() {
    return error_ != null;
  }
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>optional .google.rpc.Status error = 1;</code>
   */
  public com.google.rpc.Status getError() {
    return error_ == null ? com.google.rpc.Status.getDefaultInstance() : error_;
  }
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>optional .google.rpc.Status error = 1;</code>
   */
  private void setError(com.google.rpc.Status value) {
    if (value == null) {
      throw new NullPointerException();
    }
    error_ = value;
    
    }
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>optional .google.rpc.Status error = 1;</code>
   */
  private void setError(
      com.google.rpc.Status.Builder builderForValue) {
    error_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>optional .google.rpc.Status error = 1;</code>
   */
  private void mergeError(com.google.rpc.Status value) {
    if (error_ != null &&
        error_ != com.google.rpc.Status.getDefaultInstance()) {
      error_ =
        com.google.rpc.Status.newBuilder(error_).mergeFrom(value).buildPartial();
    } else {
      error_ = value;
    }
    
  }
  /**
   * <pre>
   * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>optional .google.rpc.Status error = 1;</code>
   */
  private void clearError() {  error_ = null;
    
  }

  public static final int RESULTS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.google.cloud.speech.v1.StreamingRecognitionResult> results_;
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  public java.util.List<com.google.cloud.speech.v1.StreamingRecognitionResult> getResultsList() {
    return results_;
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  public java.util.List<? extends com.google.cloud.speech.v1.StreamingRecognitionResultOrBuilder> 
      getResultsOrBuilderList() {
    return results_;
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  public int getResultsCount() {
    return results_.size();
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  public com.google.cloud.speech.v1.StreamingRecognitionResult getResults(int index) {
    return results_.get(index);
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  public com.google.cloud.speech.v1.StreamingRecognitionResultOrBuilder getResultsOrBuilder(
      int index) {
    return results_.get(index);
  }
  private void ensureResultsIsMutable() {
    if (!results_.isModifiable()) {
      results_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(results_);
     }
  }

  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void setResults(
      int index, com.google.cloud.speech.v1.StreamingRecognitionResult value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureResultsIsMutable();
    results_.set(index, value);
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void setResults(
      int index, com.google.cloud.speech.v1.StreamingRecognitionResult.Builder builderForValue) {
    ensureResultsIsMutable();
    results_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void addResults(com.google.cloud.speech.v1.StreamingRecognitionResult value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureResultsIsMutable();
    results_.add(value);
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void addResults(
      int index, com.google.cloud.speech.v1.StreamingRecognitionResult value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureResultsIsMutable();
    results_.add(index, value);
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void addResults(
      com.google.cloud.speech.v1.StreamingRecognitionResult.Builder builderForValue) {
    ensureResultsIsMutable();
    results_.add(builderForValue.build());
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void addResults(
      int index, com.google.cloud.speech.v1.StreamingRecognitionResult.Builder builderForValue) {
    ensureResultsIsMutable();
    results_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void addAllResults(
      java.lang.Iterable<? extends com.google.cloud.speech.v1.StreamingRecognitionResult> values) {
    ensureResultsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, results_);
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void clearResults() {
    results_ = emptyProtobufList();
  }
  /**
   * <pre>
   * *Output-only* This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or more `is_final=false` results followed by zero or one
   * `is_final=true` result (the newly settled portion).
   * </pre>
   *
   * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
   */
  private void removeResults(int index) {
    ensureResultsIsMutable();
    results_.remove(index);
  }

  public static final int SPEECH_EVENT_TYPE_FIELD_NUMBER = 4;
  private int speechEventType_;
  /**
   * <pre>
   * *Output-only* Indicates the type of speech event.
   * </pre>
   *
   * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
   */
  public int getSpeechEventTypeValue() {
    return speechEventType_;
  }
  /**
   * <pre>
   * *Output-only* Indicates the type of speech event.
   * </pre>
   *
   * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
   */
  public com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType getSpeechEventType() {
    com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType result = com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType.forNumber(speechEventType_);
    return result == null ? com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * *Output-only* Indicates the type of speech event.
   * </pre>
   *
   * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
   */
  private void setSpeechEventTypeValue(int value) {
      speechEventType_ = value;
  }
  /**
   * <pre>
   * *Output-only* Indicates the type of speech event.
   * </pre>
   *
   * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
   */
  private void setSpeechEventType(com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType value) {
    if (value == null) {
      throw new NullPointerException();
    }
    
    speechEventType_ = value.getNumber();
  }
  /**
   * <pre>
   * *Output-only* Indicates the type of speech event.
   * </pre>
   *
   * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
   */
  private void clearSpeechEventType() {
    
    speechEventType_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (error_ != null) {
      output.writeMessage(1, getError());
    }
    for (int i = 0; i < results_.size(); i++) {
      output.writeMessage(2, results_.get(i));
    }
    if (speechEventType_ != com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType.SPEECH_EVENT_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, speechEventType_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (error_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getError());
    }
    for (int i = 0; i < results_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, results_.get(i));
    }
    if (speechEventType_ != com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType.SPEECH_EVENT_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, speechEventType_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.cloud.speech.v1.StreamingRecognizeResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.speech.v1.StreamingRecognizeResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * `StreamingRecognizeResponse` is the only message returned to the client by
   * `StreamingRecognize`. A series of zero or more `StreamingRecognizeResponse`
   * messages are streamed back to the client. If there is no recognizable
   * audio, and `single_utterance` is set to false, then no messages are streamed
   * back to the client.
   * Here's an example of a series of ten `StreamingRecognizeResponse`s that might
   * be returned while processing audio:
   * 1. results { alternatives { transcript: "tube" } stability: 0.01 }
   * 2. results { alternatives { transcript: "to be a" } stability: 0.01 }
   * 3. results { alternatives { transcript: "to be" } stability: 0.9 }
   *    results { alternatives { transcript: " or not to be" } stability: 0.01 }
   * 4. results { alternatives { transcript: "to be or not to be"
   *                             confidence: 0.92 }
   *              alternatives { transcript: "to bee or not to bee" }
   *              is_final: true }
   * 5. results { alternatives { transcript: " that's" } stability: 0.01 }
   * 6. results { alternatives { transcript: " that is" } stability: 0.9 }
   *    results { alternatives { transcript: " the question" } stability: 0.01 }
   * 7. results { alternatives { transcript: " that is the question"
   *                             confidence: 0.98 }
   *              alternatives { transcript: " that was the question" }
   *              is_final: true }
   * Notes:
   * - Only two of the above responses #4 and #7 contain final results; they are
   *   indicated by `is_final: true`. Concatenating these together generates the
   *   full transcript: "to be or not to be that is the question".
   * - The others contain interim `results`. #3 and #6 contain two interim
   *   `results`: the first portion has a high stability and is less likely to
   *   change; the second portion has a low stability and is very likely to
   *   change. A UI designer might choose to show only high stability `results`.
   * - The specific `stability` and `confidence` values shown above are only for
   *   illustrative purposes. Actual values may vary.
   * - In each response, only one of these fields will be set:
   *     `error`,
   *     `speech_event_type`, or
   *     one or more (repeated) `results`.
   * </pre>
   *
   * Protobuf type {@code google.cloud.speech.v1.StreamingRecognizeResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.cloud.speech.v1.StreamingRecognizeResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.speech.v1.StreamingRecognizeResponse)
      com.google.cloud.speech.v1.StreamingRecognizeResponseOrBuilder {
    // Construct using com.google.cloud.speech.v1.StreamingRecognizeResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
     * specifies the error for the operation.
     * </pre>
     *
     * <code>optional .google.rpc.Status error = 1;</code>
     */
    public boolean hasError() {
      return instance.hasError();
    }
    /**
     * <pre>
     * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
     * specifies the error for the operation.
     * </pre>
     *
     * <code>optional .google.rpc.Status error = 1;</code>
     */
    public com.google.rpc.Status getError() {
      return instance.getError();
    }
    /**
     * <pre>
     * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
     * specifies the error for the operation.
     * </pre>
     *
     * <code>optional .google.rpc.Status error = 1;</code>
     */
    public Builder setError(com.google.rpc.Status value) {
      copyOnWrite();
      instance.setError(value);
      return this;
      }
    /**
     * <pre>
     * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
     * specifies the error for the operation.
     * </pre>
     *
     * <code>optional .google.rpc.Status error = 1;</code>
     */
    public Builder setError(
        com.google.rpc.Status.Builder builderForValue) {
      copyOnWrite();
      instance.setError(builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
     * specifies the error for the operation.
     * </pre>
     *
     * <code>optional .google.rpc.Status error = 1;</code>
     */
    public Builder mergeError(com.google.rpc.Status value) {
      copyOnWrite();
      instance.mergeError(value);
      return this;
    }
    /**
     * <pre>
     * *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
     * specifies the error for the operation.
     * </pre>
     *
     * <code>optional .google.rpc.Status error = 1;</code>
     */
    public Builder clearError() {  copyOnWrite();
      instance.clearError();
      return this;
    }

    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public java.util.List<com.google.cloud.speech.v1.StreamingRecognitionResult> getResultsList() {
      return java.util.Collections.unmodifiableList(
          instance.getResultsList());
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public int getResultsCount() {
      return instance.getResultsCount();
    }/**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public com.google.cloud.speech.v1.StreamingRecognitionResult getResults(int index) {
      return instance.getResults(index);
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder setResults(
        int index, com.google.cloud.speech.v1.StreamingRecognitionResult value) {
      copyOnWrite();
      instance.setResults(index, value);
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder setResults(
        int index, com.google.cloud.speech.v1.StreamingRecognitionResult.Builder builderForValue) {
      copyOnWrite();
      instance.setResults(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder addResults(com.google.cloud.speech.v1.StreamingRecognitionResult value) {
      copyOnWrite();
      instance.addResults(value);
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder addResults(
        int index, com.google.cloud.speech.v1.StreamingRecognitionResult value) {
      copyOnWrite();
      instance.addResults(index, value);
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder addResults(
        com.google.cloud.speech.v1.StreamingRecognitionResult.Builder builderForValue) {
      copyOnWrite();
      instance.addResults(builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder addResults(
        int index, com.google.cloud.speech.v1.StreamingRecognitionResult.Builder builderForValue) {
      copyOnWrite();
      instance.addResults(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder addAllResults(
        java.lang.Iterable<? extends com.google.cloud.speech.v1.StreamingRecognitionResult> values) {
      copyOnWrite();
      instance.addAllResults(values);
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder clearResults() {
      copyOnWrite();
      instance.clearResults();
      return this;
    }
    /**
     * <pre>
     * *Output-only* This repeated list contains zero or more results that
     * correspond to consecutive portions of the audio currently being processed.
     * It contains zero or more `is_final=false` results followed by zero or one
     * `is_final=true` result (the newly settled portion).
     * </pre>
     *
     * <code>repeated .google.cloud.speech.v1.StreamingRecognitionResult results = 2;</code>
     */
    public Builder removeResults(int index) {
      copyOnWrite();
      instance.removeResults(index);
      return this;
    }

    /**
     * <pre>
     * *Output-only* Indicates the type of speech event.
     * </pre>
     *
     * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
     */
    public int getSpeechEventTypeValue() {
      return instance.getSpeechEventTypeValue();
    }
    /**
     * <pre>
     * *Output-only* Indicates the type of speech event.
     * </pre>
     *
     * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
     */
    public Builder setSpeechEventTypeValue(int value) {
      copyOnWrite();
      instance.setSpeechEventTypeValue(value);
      return this;
    }
    /**
     * <pre>
     * *Output-only* Indicates the type of speech event.
     * </pre>
     *
     * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
     */
    public com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType getSpeechEventType() {
      return instance.getSpeechEventType();
    }
    /**
     * <pre>
     * *Output-only* Indicates the type of speech event.
     * </pre>
     *
     * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
     */
    public Builder setSpeechEventType(com.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType value) {
      copyOnWrite();
      instance.setSpeechEventType(value);
      return this;
    }
    /**
     * <pre>
     * *Output-only* Indicates the type of speech event.
     * </pre>
     *
     * <code>optional .google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType speech_event_type = 4;</code>
     */
    public Builder clearSpeechEventType() {
      copyOnWrite();
      instance.clearSpeechEventType();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.speech.v1.StreamingRecognizeResponse)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.cloud.speech.v1.StreamingRecognizeResponse();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        results_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.cloud.speech.v1.StreamingRecognizeResponse other = (com.google.cloud.speech.v1.StreamingRecognizeResponse) arg1;
        error_ = visitor.visitMessage(error_, other.error_);
        results_= visitor.visitList(results_, other.results_);
        speechEventType_ = visitor.visitInt(speechEventType_ != 0, speechEventType_,    other.speechEventType_ != 0, other.speechEventType_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.rpc.Status.Builder subBuilder = null;
                if (error_ != null) {
                  subBuilder = error_.toBuilder();
                }
                error_ = input.readMessage(com.google.rpc.Status.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(error_);
                  error_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!results_.isModifiable()) {
                  results_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(results_);
                }
                results_.add(
                    input.readMessage(com.google.cloud.speech.v1.StreamingRecognitionResult.parser(), extensionRegistry));
                break;
              }
              case 32: {
                int rawValue = input.readEnum();

                speechEventType_ = rawValue;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.cloud.speech.v1.StreamingRecognizeResponse.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.cloud.speech.v1.StreamingRecognizeResponse)
  private static final com.google.cloud.speech.v1.StreamingRecognizeResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new StreamingRecognizeResponse();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.cloud.speech.v1.StreamingRecognizeResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<StreamingRecognizeResponse> PARSER;

  public static com.google.protobuf.Parser<StreamingRecognizeResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

