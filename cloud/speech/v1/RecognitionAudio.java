// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/speech/v1/cloud_speech.proto

package com.google.cloud.speech.v1;

/**
 * <pre>
 * Contains audio data in the encoding specified in the `RecognitionConfig`.
 * Either `content` or `uri` must be supplied. Supplying both or neither
 * returns [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]. See
 * [audio limits](https://cloud.google.com/speech/limits#content).
 * </pre>
 *
 * Protobuf type {@code google.cloud.speech.v1.RecognitionAudio}
 */
public  final class RecognitionAudio extends
    com.google.protobuf.GeneratedMessageLite<
        RecognitionAudio, RecognitionAudio.Builder> implements
    // @@protoc_insertion_point(message_implements:google.cloud.speech.v1.RecognitionAudio)
    RecognitionAudioOrBuilder {
  private RecognitionAudio() {
  }
  private int audioSourceCase_ = 0;
  private java.lang.Object audioSource_;
  public enum AudioSourceCase
      implements com.google.protobuf.Internal.EnumLite {
    CONTENT(1),
    URI(2),
    AUDIOSOURCE_NOT_SET(0);
    private final int value;
    private AudioSourceCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AudioSourceCase valueOf(int value) {
      return forNumber(value);
    }

    public static AudioSourceCase forNumber(int value) {
      switch (value) {
        case 1: return CONTENT;
        case 2: return URI;
        case 0: return AUDIOSOURCE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public AudioSourceCase
  getAudioSourceCase() {
    return AudioSourceCase.forNumber(
        audioSourceCase_);
  }

  private void clearAudioSource() {
    audioSourceCase_ = 0;
    audioSource_ = null;
  }

  public static final int CONTENT_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The audio data bytes encoded as specified in
   * `RecognitionConfig`. Note: as with all bytes fields, protobuffers use a
   * pure binary representation, whereas JSON representations use base64.
   * </pre>
   *
   * <code>optional bytes content = 1;</code>
   */
  public com.google.protobuf.ByteString getContent() {
    if (audioSourceCase_ == 1) {
      return (com.google.protobuf.ByteString) audioSource_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }
  /**
   * <pre>
   * The audio data bytes encoded as specified in
   * `RecognitionConfig`. Note: as with all bytes fields, protobuffers use a
   * pure binary representation, whereas JSON representations use base64.
   * </pre>
   *
   * <code>optional bytes content = 1;</code>
   */
  private void setContent(com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  audioSourceCase_ = 1;
    audioSource_ = value;
  }
  /**
   * <pre>
   * The audio data bytes encoded as specified in
   * `RecognitionConfig`. Note: as with all bytes fields, protobuffers use a
   * pure binary representation, whereas JSON representations use base64.
   * </pre>
   *
   * <code>optional bytes content = 1;</code>
   */
  private void clearContent() {
    if (audioSourceCase_ == 1) {
      audioSourceCase_ = 0;
      audioSource_ = null;
    }
  }

  public static final int URI_FIELD_NUMBER = 2;
  /**
   * <pre>
   * URI that points to a file that contains audio data bytes as specified in
   * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
   * supported, which must be specified in the following format:
   * `gs://bucket_name/object_name` (other URI formats return
   * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
   * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
   * </pre>
   *
   * <code>optional string uri = 2;</code>
   */
  public java.lang.String getUri() {
    java.lang.String ref = "";
    if (audioSourceCase_ == 2) {
      ref = (java.lang.String) audioSource_;
    }
    return ref;
  }
  /**
   * <pre>
   * URI that points to a file that contains audio data bytes as specified in
   * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
   * supported, which must be specified in the following format:
   * `gs://bucket_name/object_name` (other URI formats return
   * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
   * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
   * </pre>
   *
   * <code>optional string uri = 2;</code>
   */
  public com.google.protobuf.ByteString
      getUriBytes() {
    java.lang.String ref = "";
    if (audioSourceCase_ == 2) {
      ref = (java.lang.String) audioSource_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * URI that points to a file that contains audio data bytes as specified in
   * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
   * supported, which must be specified in the following format:
   * `gs://bucket_name/object_name` (other URI formats return
   * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
   * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
   * </pre>
   *
   * <code>optional string uri = 2;</code>
   */
  private void setUri(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  audioSourceCase_ = 2;
    audioSource_ = value;
  }
  /**
   * <pre>
   * URI that points to a file that contains audio data bytes as specified in
   * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
   * supported, which must be specified in the following format:
   * `gs://bucket_name/object_name` (other URI formats return
   * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
   * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
   * </pre>
   *
   * <code>optional string uri = 2;</code>
   */
  private void clearUri() {
    if (audioSourceCase_ == 2) {
      audioSourceCase_ = 0;
      audioSource_ = null;
    }
  }
  /**
   * <pre>
   * URI that points to a file that contains audio data bytes as specified in
   * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
   * supported, which must be specified in the following format:
   * `gs://bucket_name/object_name` (other URI formats return
   * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
   * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
   * </pre>
   *
   * <code>optional string uri = 2;</code>
   */
  private void setUriBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    audioSourceCase_ = 2;
    audioSource_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (audioSourceCase_ == 1) {
      output.writeBytes(
          1, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) audioSource_));
    }
    if (audioSourceCase_ == 2) {
      output.writeString(2, getUri());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (audioSourceCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(
            1, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) audioSource_));
    }
    if (audioSourceCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getUri());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.cloud.speech.v1.RecognitionAudio parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.speech.v1.RecognitionAudio prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Contains audio data in the encoding specified in the `RecognitionConfig`.
   * Either `content` or `uri` must be supplied. Supplying both or neither
   * returns [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]. See
   * [audio limits](https://cloud.google.com/speech/limits#content).
   * </pre>
   *
   * Protobuf type {@code google.cloud.speech.v1.RecognitionAudio}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.cloud.speech.v1.RecognitionAudio, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.speech.v1.RecognitionAudio)
      com.google.cloud.speech.v1.RecognitionAudioOrBuilder {
    // Construct using com.google.cloud.speech.v1.RecognitionAudio.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public AudioSourceCase
        getAudioSourceCase() {
      return instance.getAudioSourceCase();
    }

    public Builder clearAudioSource() {
      copyOnWrite();
      instance.clearAudioSource();
      return this;
    }


    /**
     * <pre>
     * The audio data bytes encoded as specified in
     * `RecognitionConfig`. Note: as with all bytes fields, protobuffers use a
     * pure binary representation, whereas JSON representations use base64.
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return instance.getContent();
    }
    /**
     * <pre>
     * The audio data bytes encoded as specified in
     * `RecognitionConfig`. Note: as with all bytes fields, protobuffers use a
     * pure binary representation, whereas JSON representations use base64.
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     */
    public Builder setContent(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setContent(value);
      return this;
    }
    /**
     * <pre>
     * The audio data bytes encoded as specified in
     * `RecognitionConfig`. Note: as with all bytes fields, protobuffers use a
     * pure binary representation, whereas JSON representations use base64.
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     */
    public Builder clearContent() {
      copyOnWrite();
      instance.clearContent();
      return this;
    }

    /**
     * <pre>
     * URI that points to a file that contains audio data bytes as specified in
     * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
     * supported, which must be specified in the following format:
     * `gs://bucket_name/object_name` (other URI formats return
     * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
     * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
     * </pre>
     *
     * <code>optional string uri = 2;</code>
     */
    public java.lang.String getUri() {
      return instance.getUri();
    }
    /**
     * <pre>
     * URI that points to a file that contains audio data bytes as specified in
     * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
     * supported, which must be specified in the following format:
     * `gs://bucket_name/object_name` (other URI formats return
     * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
     * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
     * </pre>
     *
     * <code>optional string uri = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUriBytes() {
      return instance.getUriBytes();
    }
    /**
     * <pre>
     * URI that points to a file that contains audio data bytes as specified in
     * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
     * supported, which must be specified in the following format:
     * `gs://bucket_name/object_name` (other URI formats return
     * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
     * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
     * </pre>
     *
     * <code>optional string uri = 2;</code>
     */
    public Builder setUri(
        java.lang.String value) {
      copyOnWrite();
      instance.setUri(value);
      return this;
    }
    /**
     * <pre>
     * URI that points to a file that contains audio data bytes as specified in
     * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
     * supported, which must be specified in the following format:
     * `gs://bucket_name/object_name` (other URI formats return
     * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
     * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
     * </pre>
     *
     * <code>optional string uri = 2;</code>
     */
    public Builder clearUri() {
      copyOnWrite();
      instance.clearUri();
      return this;
    }
    /**
     * <pre>
     * URI that points to a file that contains audio data bytes as specified in
     * `RecognitionConfig`. Currently, only Google Cloud Storage URIs are
     * supported, which must be specified in the following format:
     * `gs://bucket_name/object_name` (other URI formats return
     * [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
     * [Request URIs](https://cloud.google.com/storage/docs/reference-uris).
     * </pre>
     *
     * <code>optional string uri = 2;</code>
     */
    public Builder setUriBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setUriBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.speech.v1.RecognitionAudio)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.cloud.speech.v1.RecognitionAudio();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.cloud.speech.v1.RecognitionAudio other = (com.google.cloud.speech.v1.RecognitionAudio) arg1;
        switch (other.getAudioSourceCase()) {
          case CONTENT: {
            audioSource_ = visitor.visitOneofByteString(
                audioSourceCase_ == 1, audioSource_, other.audioSource_);
            break;
          }
          case URI: {
            audioSource_ = visitor.visitOneofString(
               audioSourceCase_ == 2, audioSource_, other.audioSource_);
            break;
          }
          case AUDIOSOURCE_NOT_SET: {
            visitor.visitOneofNotSet(audioSourceCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.audioSourceCase_ != 0) {
            audioSourceCase_ = other.audioSourceCase_;
          }
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                audioSourceCase_ = 1;
                audioSource_ = input.readBytes();
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();
                audioSourceCase_ = 2;
                audioSource_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.cloud.speech.v1.RecognitionAudio.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.cloud.speech.v1.RecognitionAudio)
  private static final com.google.cloud.speech.v1.RecognitionAudio DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new RecognitionAudio();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.cloud.speech.v1.RecognitionAudio getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RecognitionAudio> PARSER;

  public static com.google.protobuf.Parser<RecognitionAudio> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

